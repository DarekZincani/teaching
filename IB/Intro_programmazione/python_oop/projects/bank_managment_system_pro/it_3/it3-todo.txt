*** ITERAZIONE 3 - TO-DO ***

1) Assicurarsi che la branch di main abbia le modifiche della branch "iterazione_2"
    1.1) Partendo da branch main, creare localmente una nuova branch chiamata "iterazione_3"
    1.2) Una volta creata la branch, fare push verso repositiory GitHub
    1.3) Scrivere il codice di questa iterazione in questa branch. 


2) Aggiungere alla classe Cliente il parametro id (compresi i sette e getter)


3) Aggiungere un file utility.py con una classe Utility al suo interno.
    2.1) nella classe Utility scrivere un metodo statico is_integer(num) che dato un parametro di input torna True opppure False se il numero è un intero o no. 


4) Aggiungere alla classe Banca i seguenti metodi: 
    3.1) aggiungi_conto(self, conto), aggiunge l'oggetto conto passato come parametro alla lista conti_correnti
    3.2) aggiungi_cliente(self, cliente), aggiunge l'oggetto conto passato come parametro alla lista clienti
    3.3) rimuovi_conto(self, numero_conto), rimuove dalla lista conti_correnti il conto corrente con il numero_conto corrispondente
    3.4) rimuovi_cliente(self_id), rimuove dalla lista conti_correnti il conto corrente con il numero_conto corrispondente

    Nota: entrambi i metodi di rimozione devono stampare un messaggio di errore se il dato non è presente nella lista. Se presente, dopo la rimozione, devono stampare un messaggio di feedback positivo 


5) Terminato il punto 4, committare le modifiche e fare push verso account di GitHub 
    5.1) fare il merge della branch "iterazione_3" su main e successivamente fare push verso il repository GitHub