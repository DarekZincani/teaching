Esercizio. 

Effettuare un "Refactoring" del codice presente nella classe main.py secondo il paradigma OOP. 

Crare una classe item.py con le seguenti caratteristiche: 
    1. prevedere una variabile di classe pay_rate che indica quando effettivamente sia il prezzo dopo lo sconto (es 0.8). Prevedere inoltre una lista per momorizzare le istanze degli item (e classi che ereditano)
    2. Scrivere il metodo __init__(self, name:str, price: float, quantity=0) che assegni alle variabili di classe i parametri. 
    In questo metodo prevedere un controllo per quantity e price che siano maggiori di zero. 
    3. Scrivere il metodo di classe "apply_discount(self) che calcola sulla variabile price, lo sconto (price * pay_rate)
    4. Un metodo che calcoli il totale del prezzo (price * quantity)
    5. Prevedere una funzione "is_integer" (con decorator @staticmethod) per controllare se effettivamente un numero è un intero o meno
    6. Utilizzare la funzione is_integer descritta al punto precedente nel metodo __init__, se il numero relativa alla quantity non è un intero
    sollevare una eccezione

Alla fine dovranno essere presenti le seguenti classi: 
    1. phone.py
    2. keyboard.py

Entrambe queste classi dovranno ereditare la classe item.py che rappresenta l'oggetto di dominio. 

