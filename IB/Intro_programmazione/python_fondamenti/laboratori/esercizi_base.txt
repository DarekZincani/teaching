https://bit.ly/3FlGLJm

Risorse utili: 
https://www.html.it/pag/15613/liste/
https://www.html.it/pag/15615/tuple/

https://www.atlassian.com/git/tutorials/what-is-version-control




01 - Stampare i primi 10 numeri naturali usando prima un ciclo while e poi un ciclo for


02 - Scrivere un programma che stampi 100 volte a video il tuo nome, con un ciclo while e poi con un ciclo for


03 - Calcolare la somma di tutti i numeri da 1 al numero dato in input
    - Se l'utente inserisce 10, il risultato che vogliamo ottenere sarà 55
    
    Approccio 1: 
        - Crea una variabile "somma" per memorizzare la somma di tutti i numeri 
        - Usa la funzione "input" per prendere il numero dall'utente
        - Converti l'input dell'utente utilizzanto la funzione int()
        - Fai ciclo n volte usando il ciclo for e la funzione python range
        - Ad ogni iterazione del ciclo, aggiungi il numero corrente alla variabile "somma"
        - Usa la funzione print() per visualizzare la variabile "somma"


04 - Scrivere un programma per stampare la relativa tabella di moltiplicazione. 
    - Se l'utente inserisce "2" l'output che vogliamo sarà
        2
        4
        6
        8
        10
        12
        14
        16
        18
        20 


05 - Scrivere un programma che calcola la lunghezza di una stringa di input
    - es: input: "davide"
    - output: 6

    Approccio 1: usare la funzione python "len"
    Approccio 2: usando un ciclo for e una variabile contatore 


06 - Scrivere un programma che data una stringa in input, la stampi prima tutti in UpperCase e successivamente
    in lowercase
        - es: input: "Davide"
        - output: DAVIDE
                  davide


07 - Scrivere un programma che data una stringa in input, stampi solo le lettere in posizione pari
    - es: input: "Davide"
    - output: Dvd


08 - Scrivi una funzione Python per ottenere una stringa composta da 4 copie degli ultimi due caratteri di 
una stringa specificata (la lunghezza deve essere almeno 2)
    - 'Python' -> onononon
    - 'Davide' -> dededede


09 - Scrivere un programma che presa in input una stringa, ritorni True oppure False se la stringa è un 
multiplo di 4


10 - Scrivere un programma Python per ordinare una stringa in ordine lessicografica
    es: w3resource --> ['3', 'c', 'e', 'e', 'o', 'r', 'r', 's', 'u', 'w']  
    es: quickbrown --> ['b', 'c', 'i', 'k', 'n', 'o', 'q', 'r', 'u', 'w']


11 - Scrivere una funzione Python che controlla se una stringa inizia un carattere passato in input. 
Stampare True se vero


12 - Scrivere una funzione Python che stampi (arrotondando in maniera opportuna) al massimo fino ai primi 
due numeri dopo la virgola di un numero decimale.

    suggerimento: funzione format di python, per selezionare solo le due cifre usate {:.2f}

    es: 3.1415926 -> 3.14 
        12.9999   -> 13.00

13 - Scrivere un programma Python per stampare i seguenti numeri interi con zeri a sinistra della larghezza 
specificata.
    
    es: 3    --> 03
        123  --> 000123

14 - Scrivere una funzione "niente_e" che restituisca False se la parola contiene almeno una 'e', True altrimenti
     es: casa   --> True
        niente --> False

    14.1  Data la funzione precedente, renderla generica in modo da accettare una lettera come secondo parametro
        niente_e(parola, carattere_vietato)

15 - Vogliamo un programma che, preso in input dall’utente un numero intero maggiore di zero n, aggiunga ad una 
lista i numeri pari e successivamente con un ciclo stampare gli elementi di questa lista. 

16 - Dato il punto 15, aggiungere ad una lista anche i numeri dispari 

17 - Dato il punto 16, stampare la somma dei numeri pari e la somma dei numeri dispari

18 - Popolare una lista di n elementi con i primi n numeri pari. Dopo averli inseriti visualizzare 
in output i valori memorizzati nella lista e la loro posizione.

    - input:    10 
    - output:   Elemento in posizione 0: 0
                Elemento in posizione 1: 2
                Elemento in posizione 2: 4
                Elemento in posizione 3: 6
                Elemento in posizione 4: 8
                Elemento in posizione 5: 10


19 -Prendere in input 10 numeri dal terminale e inserirli in 
una lista. Stampare la sommatoria di questa lista

    0, 1, 1, 0, 0, 10, 2, 20, 0, 1
    35


20 - Date in input due liste di elementi da terminale, tornare una lista in output che sia la differenza della prima
con la seconda
    es:      ["a", "b", "c", "d"]
             ["a", "b"]

    output    ["c", "d"]

21 - Scrivi un programma Python per trovare l'elenco di parole più lunghe di n da un determinato elenco di parole.

22 - Scrivi un programma Python per convertire una lista di caratteri in una stringa

23 - Scrivi un programma Python per estrarre un dato numero di elementi (preso in input) selezionati casualmente da una data lista

24 - Scrivere un programma Python per creare una lista multidimensionale (liste di liste) con zeri.
     output: [[0, 0], [0, 0], [0, 0]]

25 - Scrivi un programma Python per creare una griglia nXn con numeri.
     es: 3 
        [[1, 2, 3], [1, 2, 3], [1, 2, 3]]
     es: 4
        [[1, 2, 3,4], [1, 2, 3,4], [1, 2, 3,4], [1, 2, 3,4]]
     


26 - Scrivere un programma Python per aggiungere un elemento preso in input in una tupla

27 - Scrivi un programma Python per trovare gli elementi ripetuti di una tupla

28 - Scrivi un programma Python per rimuovere un elemento da una tupla

29 - Scrivere un programma Python per invertire una tupla di elementi presi in input


30- Scrivi un programma python per controllare se un dizionario è vuoto 

31 - Scrivere una funzione python per aggiungere una chiave presa in input da terminale ad un dizionario 
    es dictionary = {0:"a", 1:"b"}
        2, "c"
        dictionary = {0:"a", 1:"b", 2:"c"}

32 - Scrivi un programma Python per scorrere i dizionari usando un loop
        d = {'x': 10, 'y': 20, 'z': 30}

33 - Scrivi un programma Python per creare un dizionario da una stringa.
     Sample string : 'w3resource'
     Expected output: {'w': 1, '3': 1, 'r': 2, 'e': 2, 's': 1, 'o': 1, 'u': 1, 'c': 1}





 